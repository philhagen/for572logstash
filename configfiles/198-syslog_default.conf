filter {
    # all other syslog messages
    if "process_syslog" in [tags] and !("parse_done" in [tags]) {
        grok {
            patterns_dir => "/usr/local/sof-elk/grok-patterns"
            match => [ "message", "(?:\[%{BASE10NUM:ipt_uptime:float}\]%{SPACE})?%{IPTABLES}" ]
            add_tag => [ "got_iptables", "parse_done" ]
            tag_on_failure => [ "_defaultparse" ]
        }
        grok {
            patterns_dir => "/usr/local/sof-elk/grok-patterns"
            match => [ "message", "%{CISCO_ASA_MSG}" ]
            add_tag => [ "got_cisco", "parse_done" ]
            tag_on_failure => [ "_defaultparse" ]
        }

        if "got_iptables" in [tags] and [ipt_src_ip] {
            geoip {
                database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                source => "[ipt_src_ip]"
                target => "[ipt_srcgeo]"
            }
            geoip {
                database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                source => "[ipt_src_ip]"
                target => "[ipt_srcgeo]"
            }
            mutate {
                add_field => {
                    "ips" => [ "%{ipt_src_ip}", "%{ipt_dst_ip}" ]
                }
            }
        }
        ###################################################
        # Anything with a valid src_ip, let's enrich
        ###################################################
        if [src_ip] {
          geoip {
	    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
	    source => "[src_ip]"
	    target => "[ssh_srcgeo]"
          }
          geoip {
	    database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
	    source => "[src_ip]"
	    target => "[ssh_srcgeo]"
          }
        }
        #mutate {
        #  add_field => { "ips" => "%{src_ip}" }
        #}
        if [ssh_srcgeo][ip] {
          mutate {
	    remove_field => [ "[ssh_srcgeo][ip]" ]
          }
        } 
        else if "_gpfail_sshlogin" in [tags] {
          mutate {
	    remove_tag => [ "_gpfail_sshlogin"]
          }
        }

        ##########################################
        # Existing geo enrich on iptables records
        ##########################################
        if [ipt_srcgeo][ip] {
            mutate {
                remove_field => [ "[ipt_srcgeo][ip]" ]
            }
        }
        if "got_iptables" in [tags] and [ipt_dst_ip] {
            geoip {
                database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                source => "[ipt_dst_ip]"
                target => "[ipt_dstgeo]"
            }
            geoip {
                database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                source => "[ipt_dst_ip]"
                target => "[ipt_dstgeo]"
            }
        }
        if [ipt_dstgeo][ip] {
            mutate {
                remove_field => [ "[ipt_dstgeo][ip]" ]
            }
        }
    }
}
