# SOF-ELKÂ® Configuration File
# (C)2020 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for PassiveDNS messages

filter {
  # passivedns records
  if [type] == "archive-passivedns" or (([type] == "syslog") and [syslog_program] == "passivedns") {
    grok {
      patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
      match => [ "message", "%{UNIX_MSEC:unix_timestamp}[0-9]*\|\|%{IP:source_ip}\|\|%{IP:destination_ip}\|\|%{WORD:rrclass}\|\|%{PDNS_IPORHOST:query}\|\|%{WORD:querytype}\|\|%{PDNS_ANSWER:answer}\|\|%{INT:ttl}\|\|%{INT:cachehits}" ]
      add_tag => [ "got_passivedns" ]
      tag_on_failure => [ "_gpfail", "fail_sl11" ]
    }
    if [logsource] {
      mutate {
        add_field => { "path" => "PassiveDNS log from %{logsource}" }
      }
    } else if "filebeat" in [tags] {
      mutate {
        add_field => { "path" => "filebeat: %{[host][name]}:%{[log][file][path]}" }
      }
    } else {
      mutate {
        add_field => { "path" => "unknown source" }
      }
    }
  }
  if [type] == "archive-passivedns" and "got_passivedns" in [tags] {
    mutate {
      add_field => {
        "syslog_program" => "passivedns"
        "syslog_hostname" => "0.0.0.0"
      }
    }
  }
  if [type] == "archive-passivedns" or (([type] == "syslog") and [syslog_program] == "passivedns") and "got_passivedns" in [tags] {
    mutate {
      # remove trailing dots for both queries and answers
      gsub => [ "query", "\.$", "" ]
      gsub => [ "answer", "\.$", "" ]

      # remove the decimal point in the timestamp, so instead of sec.msec, we have msec
      gsub => [ "unix_timestamp", "\.", "" ]
    }

    date {
      match => [ "unix_timestamp", "UNIX_MS" ]
    }

    mutate {
      remove_field => [ "unix_timestamp" ]
      add_tag => [ "parse_done" ]
    }

    if [source_ip] and [query] and [answer] {
      mutate {
        replace => { "message" => "DNS: %{source_ip} (%{query} -> %{answer})" }
      }
    }

    if [answer] and [querytype] != "CNAME" {
      grok {
        match => [ "answer", "^%{IP:answer_ip}$" ]
      }
    }
  }
}
